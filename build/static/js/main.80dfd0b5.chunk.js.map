{"version":3,"sources":["Directory/MSOE_Headshots_2653.jpg","Directory/Home.tsx","Directory/Languages/Java.tsx","Directory/Languages/Python.tsx","Directory/Languages/JavaScript.tsx","Directory/ExtraCirricular/PreviousJobs.tsx","Directory/Other/FreeTime.tsx","Directory/Other/ClassesTaken.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Home","headers","textAlign","style","this","src","require","alt","id","height","background","Component","Java","Python","JavaScript","PreviousJobs","FreeTime","className","ClassesTaken","Route","App","navItem","color","padding","backgroundColor","flex","dropDownItem","Navbar","bg","variant","Brand","href","text","display","flexDirection","border","Nav","Item","Link","Toggle","Collapse","NavDropdown","title","exact","path","component","React","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.80dfd0b5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/MSOE_Headshots_2653.07258906.jpg\";","import React, {Component} from 'react';\r\nimport CSS from 'csstype';\r\nimport \"./MSOE_Headshots_2653.jpg\"\r\n\r\nclass Home extends Component {\r\n\r\n    headers: CSS.Properties = {\r\n        textAlign: \"center\"\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1 style={this.headers}>Welcome to my website!</h1>\r\n                <img src={require('./MSOE_Headshots_2653.jpg')} alt=\"Kam \" id=\"image\" style={{height: \"200px\"}}/>\r\n                <p id=\"BioBody\" style={{background:\"lightblue\"}}> <b>I am a third year Software Engineering student at MSOE with extended experience in JavaScript (mostly as a MEAN + MERN stack developer),\r\n                    Java and fundamental knowledge of other languages such as Python, C++, and C.\r\n                    I have extensive campus leadership experience also. Please contact me at mitchellk@msoe.edu.\r\n                      <br/> <br/>\r\n                    I knew I wanted to study Software Engineering when I was in my Digital Electronics class in high school. We were\r\n                    assigned a project where we had to make a robot to travel a specific distance back and forth. My team decided to\r\n                    use two sonars for this task. Originally, I was interested in the building phase but as time went on, I found\r\n                    myself spending more time on figuring out how the code for the robot would work. Once I figured out how to make\r\n                    both sonars work interchangeably, I realized how much fun it was to be able to use computers to make material\r\n                    such as metal do something.\r\n                     <br/> <br/>\r\n                    I continue to have fun making things happen with my code at MSOE in numerous group and individual projects such\r\n                    as: developing a Word Counter capable of detecting various options in a document (i.e. invalid words and\r\n                    location, number of times letters appeared, how many valid words on each line, etc.); developing a GPS tracker\r\n                    capable of reading xml files to determine various analytics that users would want to know (i.e. distance between\r\n                    two locations, average speed between track of coordinates, etc.); and developing an Image Manipulator program,\r\n                    including file extensions, capable of reading and writing multiple image formats as well as changing colors and\r\n                    tones.\r\n                        <br/> <br/>\r\n                    I am also on the Men’s Basketball team, where I’m developing strong teamwork, discipline, and time management\r\n                    skills. This past summer I really enjoyed working as a mentor and program leader for incoming freshman to help\r\n                    them be successful in their transition into college, including tutoring them in Math, Chemistry, and\r\n                    Physics.</b>\r\n                </p>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;\r\n\r\n","import React, {Component} from 'react';\r\n\r\n\r\n\r\n\r\nclass Java extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1 style={{textAlign:\"center\"}}>Java Projects</h1>\r\n                <h3>Image Manipulator (Individual Project) </h3>\r\n                <p>\r\n                    Developed Image Manipulator program, including file extensions, capable of reading and writing\r\n                    multiple\r\n                    image formats as well as changing colors and tones.\r\n                    Developed Image Manipulator program, including file extensions,\r\n                    capable of reading and writing multiple image formats as well as changing\r\n                    colors and tones.</p>\r\n                <ul>\r\n                    <li> Developed, tested, and debugged code using Java Object Oriented and Functional Programming\r\n                        methods.\r\n                    </li>\r\n                    <li> Designed a non-trivial interactive two window Graphical User Interface for maximum\r\n                        accessibility.\r\n                    </li>\r\n                    <li> Brainstormed code outline using UML diagram and wrote robust code with error handling.</li>\r\n                </ul>\r\n                <h3> Word Counter (Group Project)</h3>\r\n                <p>\r\n                    Developed Word Counter capable of detecting various options in a document: invalid words and\r\n                    location, number of\r\n                    times letters appeared, how many valid words on each line, etc.\r\n                </p>\r\n                <ul>\r\n                    <li>Used TreeMap in order to store alphabets and their frequency, resulted in better Asymptotic time\r\n                        complexity.\r\n                    </li>\r\n                    <li> Created repository using Bitbucket and used Git for project version control.</li>\r\n                    <li>Created uml diagrams using Enterprise Architect and used code engineering to convert code to\r\n                        Java.\r\n                    </li>\r\n                    <li>Wrote unit test to minimize possibility of errors.</li>\r\n                    <li>Modified code to make it more efficient, i.e using TreeMap instead of array list to store\r\n                        alphabet values\r\n                    </li>\r\n                </ul>\r\n\r\n                <h3> GPS Tracker (Group Project)</h3>\r\n                <p>Developed GPS tracker capable of reading xml files to determine various analytics that users would\r\n                    want to know:\r\n                    distance between two locations, average speed between track of coordinates, etc. </p>\r\n                <ul>\r\n                    <li> Analyzed functional requirements (written as user stories) and developed use cases that\r\n                        described how\r\n                        application would work.\r\n                    </li>\r\n                    <li>Developed user interface mockups using Enterprise Architect.</li>\r\n                    <li>Created high level sequence diagrams illustrating interactions between elements of use cases.\r\n                    </li>\r\n                    <li>Used method of textual analysis to identify potential classes or objects and method by examining\r\n                        nouns and\r\n                        verbs used in use case scenarios.\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Java;","import React, {Component} from 'react';\r\n\r\nclass Python extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1 style={{textAlign:\"center\"}}>Python Projects (All group based Projects)</h1>\r\n                <h3>Predicted the contents of a UDP packet</h3>\r\n                <p>\r\n                    Sent UDP messages between two machines functioning as the client and server respectively.\r\n                    <ul>\r\n                        <li>Predictied how many bytes each field of the header would use, and what order each of the\r\n                            header fields and\r\n                            payload\r\n                            message would be in.\r\n                        </li>\r\n                    </ul>\r\n                </p>\r\n                <h3>TCP client/server</h3>\r\n                <p>\r\n                    Designed and implemented a simple protocol over TCP.\r\n                    <ul>\r\n                        <li> Sent messages between machines using TCP.</li>\r\n                        <li>Prompted the user for the network operation to preform (tcp send or tcp receive) and then\r\n                            called the\r\n                            selected function with appropriate argument values.\r\n                        </li>\r\n                        <li> Created a single TCP connection to the already-waiting server and sent multiple files to\r\n                            the server. This\r\n                            operation checked the single-character status received from the server and displayed it to\r\n                            the user.\r\n                        </li>\r\n                        <li> Listened for a TCP connection on a specified port, received and displayed multiple messages\r\n                            from a single\r\n                            client over a single socket, and sent a one-character response.\r\n                        </li>\r\n                        <li>\r\n                            The server saved the files with a sequential number and uploaded them. Files over the\r\n                            previous socket\r\n                            connections were overwritten.\r\n                        </li>\r\n                    </ul>\r\n                </p>\r\n                    <h3>Implemented an HTTP client</h3>\r\n                    <p>\r\n                        Wrote a program to request and save a web resource, acting as an HTTP client. Code was written\r\n                        from scratch,\r\n                        sending and receiving bytes over a TCP connection rather than using a prebuilt HTTP library.\r\n                    </p>\r\n                    <ul>\r\n                        <li>\r\n                            Using HTTP, requested a web resource and stored the returned data in the specified file.\r\n                        </li>\r\n                        <li>\r\n                            Using HTTP, requested a web resource and stored the returned payload data in the specified\r\n                            file.\r\n                        </li>\r\n\r\n                    </ul>\r\n\r\n                    <h3>Implemented an HTTP server</h3>\r\n                    <p>\r\n                        Wrote a short program to respond to HTTP requests and return web resources, acting as an HTTP\r\n                        server.\r\n                    </p>\r\n                    <ul>\r\n                        <li>Sever handled file resources. Was able to service a client request by returning the contents\r\n                            of a file\r\n                            associated with the resource identifier.\r\n                        </li>\r\n                        <li>Parsed the request Request-Line and all request header lines, storing the key/value pairs in\r\n                            a Python\r\n                            dictionary.\r\n                        </li>\r\n                        <li>\r\n                            Returned an appropriate response Status-Line and header lines to the requesting client,\r\n                            regardless of what\r\n                            the user typed in the URL.\r\n                        </li>\r\n                    </ul>\r\n\r\n                    <h3>Implemented an TFTP server\r\n                    </h3>\r\n                    <p>\r\n                        Wrote a short program for a TFTP server. The served handled requests sent from a TFTP client.\r\n                    </p>\r\n                    <ul>\r\n                        <li>\r\n                            Received a request from the client, parsed the request, and verified that it is a read\r\n                            request.\r\n                        </li>\r\n                        <li>\r\n                            Sent the data blocks to the client one by one waiting for an ack after each data message.\r\n                        </li>\r\n                        <li>\r\n                            Handled error messages as well as acks for blocks that need to be retransmitted.\r\n                        </li>\r\n                        <li>\r\n                            Closed the socket after successfully receiving an ack for the last block.\r\n                        </li>\r\n                    </ul>\r\n\r\n                    <h3>RSA Encryption/Decryption</h3>\r\n                    <p>\r\n                        Created and brute-force attacked 16-bit RSA encryption.\r\n                    </p>\r\n                    <ul>\r\n                        <li>\r\n                            Created code to create and use a public and private key.\r\n                        </li>\r\n                        <li>\r\n                            Provided the user with a variety of encryption-related actions.\r\n                        </li>\r\n                        <li>\r\n                            Created new public keys and computed the checksum for a message then encrypted it.\r\n                        </li>\r\n                        <li>\r\n                            Verified a message with its checksum, interactively.\r\n                        </li>\r\n                        <li>\r\n                            Applied the key, given as a tuple to the message.\r\n                        </li>\r\n                        <li>\r\n                            Broke key given the public key using Euclid's Extended Algorithym for lower Big - O.\r\n                        </li>\r\n                    </ul>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Python;","import React, {Component} from 'react';\r\n\r\nclass JavaScript extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1 style={{textAlign:\"center\"}}>JavaScript Projects</h1>\r\n                <p>It updated</p>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default JavaScript;","import React, {Component} from 'react';\r\n\r\nclass PreviousJobs extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>Leadership</h1>\r\n                <p>\r\n                    <b> MSOE Cater Program Assistant | Carter Program | Milwaukee, WI | July - August 2019 </b>\r\n                </p>\r\n                <ul>\r\n                    <li>\r\n                        Organized events to foster relationships and build community, e.g., poem contest, Lightspeed\r\n                        field trip.\r\n                    </li>\r\n                    <li>\r\n                        Mentored future MSOE students, teaching skills to increase successful first year at MSOE.\r\n                    </li>\r\n                    <li>\r\n                        Tutored Students in Math, Physics, and Chemistry.\r\n                    </li>\r\n                </ul>\r\n\r\n                <h1>Internship</h1>\r\n                <p>\r\n                    <b> Innovation Platform Developer | Rockwell Automation | Milwaukee, WI | Jun - Aug 2020 </b>\r\n                </p>\r\n                <ul>\r\n                    <li>\r\n                        Improved test coverage by 80% for more than 10 files, reducing the number of bugs and security risks.\r\n                    </li>\r\n                    <li>\r\n                        Developed 4 new customer-desired features that included some REST API functionality.\r\n                    </li>\r\n                    <li>\r\n                        Integrated Aha! API to allow users to submit ideas from innovation website to Aha!.\r\n                    </li>\r\n                    <li>\r\n                        Created feature that allowed users to write success stories detailing their experience using the site.\r\n                    </li>\r\n                    <li>\r\n                        Implemented feature to send emails to user for invitation to join a specific team, utilizing REST API to change states efficiently.\r\n                    </li>\r\n                    <li>\r\n                        Converted website from http to https to allow integration with outside APIs that required SSL/TSL certificate.\r\n                    </li>\r\n                    <li>\r\n                        Participated in VOC (Voice of Customer) meetings to gain Innovate Website user feedback to identify modifications to optimize usability.\r\n                    </li>\r\n                </ul>\r\n\r\n                <h1>Work Experience</h1>\r\n                <p>\r\n                    <b> Amazon Picker/Stower | Amazon Warehouse | Charlotte, NC | Summers 2017 - 2019 </b>\r\n                </p>\r\n                <ul>\r\n                    <li>\r\n                        Troubleshooting and problem-solving techniques in a high stress, competitive environment and\r\n                        produced\r\n                        adaptable, real-time strategy updates.\r\n                    </li>\r\n                    <li>\r\n                        Collaborated with team to meet and achieve goals for performance and production.\r\n                    </li>\r\n                    <li>\r\n                        Worked efficiently in a fast-paced environment with high expectations.\r\n                    </li>\r\n                </ul>\r\n\r\n\r\n                <p>\r\n                    <b> Camp Coach | Dream Big Basketball | Charlotte, NC | Seasonally 2016 - 2017 </b>\r\n                </p>\r\n                <ul>\r\n                    <li> Developed youth (1st – 7th grade) basketball skills while also teaching the importance of\r\n                        teamwork,\r\n                        sportsmanship, hard work, and humility\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PreviousJobs;","import React, {Component} from 'react';\r\n\r\nclass FreeTime extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n\r\n                    <h3 className=\"classes\">This section of the website describes what I do in my free time</h3>\r\n                    <p className=\"para\"> Each of my favorite things to do are broken down into sections of their\r\n                        own.</p>\r\n                    <ul>\r\n                        <li>\r\n                            <b>Youtube : </b> When I'm on youtube I enjoy two channels over the others; What If and\r\n                            CinemaSins (covered\r\n                            in the movie section). What if\r\n                            is a channel that, through scientific research, makes hypothesis/factual videos about what\r\n                            if something\r\n                            happens in life (i.e. what if the sahara desert was covered in solar panels, what if spiders\r\n                            were the size\r\n                            of humans, what if we turned plastic into fuel, what if you were made of dark matter, etc.)\r\n                            What if helps me\r\n                            gain new knowledge that I wouldn't have had prior and also helps answer some of my curiosity\r\n                            about if\r\n                            certain events happened in life. Other than What If videos, I usually enjoy watching coding\r\n                            videos that help\r\n                            me learn new techniques in coding and also exposes me to different languages I haven't\r\n                            learned yet.\r\n                        </li>\r\n                        <li>\r\n                            <b>Movies/TV shows : </b> I began this section making assertive statements, Dark Knight is\r\n                            the best movie of\r\n                            all time and Breaking Bad is the best TV show of all time. With this out the way, I am\r\n                            addicted to movies\r\n                            and tv shows, particularly ones about superheroes or anything else science fiction. I hate\r\n                            eating without\r\n                            having something to watch and I will wait til I find something of interest to watch before I\r\n                            eat. I also\r\n                            enjoy watching cinemasins, which is a channel on Youtube dedicated to comedically pointing\r\n                            out movie flaws.\r\n                            Watching movies, shows, and also cinemasins is just another way I de-stress from school and\r\n                            basketball.\r\n                        </li>\r\n\r\n                    </ul>\r\n                </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default FreeTime;","import React, {Component} from 'react';\r\n\r\nclass ClassesTaken extends Component {\r\n    render() {\r\n        return (\r\n                <div>\r\n                    <h3 className=\"classes\">These are all classes that I believe are relevant to improving my software\r\n                        developing\r\n                        skills</h3>\r\n                    <p className=\"para\">\r\n                        <b>Software classes</b>\r\n                    </p>\r\n                    <ul>\r\n                        <li>\r\n                            <b>Software Development I : </b> This is an introductory class to object-oriented software\r\n                            development using\r\n                            Java as\r\n                            the programming language. Topics covered included Java program structure, algorithmic\r\n                            problem solving and\r\n                            modularization, I/O statements, control constructs, looping techniques, class libraries,\r\n                            user-defined\r\n                            classes and methods, arrays and ArrayLists.\r\n\r\n                        </li>\r\n                        <li>\r\n\r\n                            <b> Software Development II : </b> This class continues the study of object-oriented\r\n                            software development\r\n                            using Java.\r\n                            Topics covered include abstraction, encapsulation, declaring and implementing abstract data\r\n                            types,\r\n                            interfaces, inheritance, polymorphism, graphical user interfaces, simple event-driven\r\n                            programming, exception\r\n                            handling, and file I/O.\r\n\r\n                        </li>\r\n                        <li>\r\n\r\n                            <b>Data Structures :</b> This course covered the organization of data and the algorithms\r\n                            that act upon them.\r\n                            The\r\n                            topics of linked lists, stacks, queues, trees, sets, and hash tables were introduced.\r\n                            Fundamentals of\r\n                            algorithm performance are also introduced, with an emphasis placed on time complexity\r\n                            analysis. Projects\r\n                            included implementation of data structures as well as the application of data structures\r\n                            from\r\n                            standard libraries.\r\n                        </li>\r\n                        <li>\r\n\r\n                            <b> Network Protocols :</b> Projects in this class were done in the Python programming\r\n                            language. This class\r\n                            provided\r\n                            an introduction to the principles and practice of computer\r\n                            networking with emphasis on the Internet and related protocols, including HTTP, FTP, POP,\r\n                            IMAP, SMTP, DNS,\r\n                            UDP, and TCP/IP with a focus on the application, transport and network layers. The course\r\n                            also introduces\r\n                            the structure, components, and functionality of network architectures including packet\r\n                            switching, error\r\n                            control, flow control, and congestion control.\r\n                        </li>\r\n                        <li>\r\n\r\n                            <b>Software Engineering Tools and Practice :</b> This class provided an introduction to the\r\n                            software\r\n                            engineering\r\n                            tools and practices and the Software Development Life Cycle. Topics include requirements\r\n                            analysis,\r\n                            high-level design, detail-level design, UML modeling, code generation, basic unit testing,\r\n                            application\r\n                            building, continuous integration, and revision management. Projects provided an opportunity\r\n                            to develop an\r\n                            understanding of these tools and how they are used in actual practice and as a result, all\r\n                            projects were\r\n                            group based.\r\n                        </li>\r\n                        <li>\r\n\r\n                            <b>Computer Organization : </b> This class provided an introduction to the structure of\r\n                            computer hardware,\r\n                            including the components of a modern computer system as well as the tradeoffs necessary to\r\n                            construct such a\r\n                            system. Specific topics include Boolean Algebra, basic combinatorial logic, basic sequential\r\n                            logic, numeric\r\n                            systems, the role of performance in designing computer systems, Amdahl’s Law, instruction\r\n                            formats,\r\n                            addressing modes, computer arithmetic with both fixed and floating point numbers, single\r\n                            cycle and\r\n                            multi-cycle data-path design, pipelining, the memory hierarchy, and caching. Assembly\r\n                            programs were\r\n                            developed on a simulator as a means of exploring instruction formats and data-path\r\n                            operation.\r\n                        </li>\r\n                        <li>\r\n\r\n                            <b>Software Component Design : </b> This class deals with the design and implementation of\r\n                            software\r\n                            subsystems. The concept of design patterns is introduced, and common patterns are applied to\r\n                            the development\r\n                            of software components. Projects provided an opportunity to implement components and to\r\n                            integrate them into\r\n                            complete systems. As a final assignment, small teams were created to conduct to implement\r\n                            components and to\r\n                            integrate them into complete systems.\r\n                        </li>\r\n                    </ul>\r\n                    <p className=\"para\"><b>Mathematics/Algorithms</b></p>\r\n                    <ul>\r\n                        <li><b>Discrete Math :</b> This class was an introduction to discrete mathematics as it applies\r\n                            to computer\r\n                            science. Topics include sets, logic, relations, functions, recursion, Boolean algebra, and\r\n                            graph theory. A\r\n                            couple of outcomes from this class include: demonstrating knowledge of formal logic proofs\r\n                            and logical\r\n                            reasoning through solving problems, applying logic to determine the validity of a formal\r\n                            argument, and\r\n                            constructing minimum spanning trees and adjacency matrices for graphs.\r\n\r\n                        </li>\r\n                    </ul>\r\n\r\n                    <p className=\"para\"><b>Business Courses</b></p>\r\n                    <ul>\r\n                        <li>\r\n                            <b>Organizational Behavior and Leadership :</b> This class explores the challenges in\r\n                            organizations in terms\r\n                            of the interaction between human beings,\r\n                            groups, and the organizational contexts within which they work. The class combines the\r\n                            multidiscipline\r\n                            approaches of psychology, sociology, anthropology, and management to understand, predict,\r\n                            and manage\r\n                            behavior in organizations. The primary goal of this course was to understand the ways\r\n                            individuals, groups,\r\n                            organizational structures, and culture impact an organization’s effectiveness and how an\r\n                            organization\r\n                            impacts all of those concepts in return. Specific attention was given to organizational\r\n                            behaviors,\r\n                            individual differences, employee fit, foundations of group behavior, communication, power\r\n                            and politics,\r\n                            culture, and change management.\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ClassesTaken;","import React, {Component, EventHandler} from 'react';\nimport './App.css';\nimport Home from \"./Directory/Home\";\nimport Emoji from \"react-emoji-render\";\nimport {BrowserRouter as Router} from \"react-router-dom\";\nimport Java from \"./Directory/Languages/Java\";\nimport Python from \"./Directory/Languages/Python\";\nimport JavaScript from \"./Directory/Languages/JavaScript\";\nimport PreviousJobs from \"./Directory/ExtraCirricular/PreviousJobs\";\nimport FreeTime from \"./Directory/Other/FreeTime\";\nimport ClassesTaken from \"./Directory/Other/ClassesTaken\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport {Nav, Navbar, NavDropdown} from \"react-bootstrap\";\nimport CSS from \"csstype\";\n\n\n\nconst Route = require(\"react-router-dom\").Route;\n// onMouseOver={(e: React.FormEvent<HTMLInputElement>) => e.currentTarget.style.background = \"red\"}\n\nexport default class App extends React.Component{\n\n        navItem: CSS.Properties = {\n            color: \"black\",\n            padding: \"5px\",\n            backgroundColor: \"lightblue\",\n            flex: \"auto\"\n        };\n\n        dropDownItem: CSS.Properties = {\n            background: \"red\",\n        }\n\n\n\n    render() {\n        return (\n         <Router>\n\n            <div className=\"App\">\n                <Navbar bg=\"dark\" variant=\"dark\" >\n                    <Navbar.Brand href=\"/home\">Learn About Kam <Emoji text=\":stuck_out_tongue_closed_eyes:\"/></Navbar.Brand>\n                    <div style={{display: \"flex\", flexDirection:\"row\", border:'solid'}}>\n                        <Nav.Item style={this.navItem}>\n                            <Nav.Link href=\"/Home\">Home</Nav.Link>\n                        </Nav.Item>\n\n                        <Nav.Item style={this.navItem}>\n                        <Navbar.Toggle/>\n                        <Navbar.Collapse>\n                                <NavDropdown title=\"Languages/Project\" id=\"basic-nav-dropdown\">\n                                    <NavDropdown.Item href=\"/java\">Java</NavDropdown.Item>\n                                    <NavDropdown.Item href=\"/python\" >Python</NavDropdown.Item>\n                                    <NavDropdown.Item href=\"/javascript\">JavaScript</NavDropdown.Item>\n                                    <NavDropdown.Item href=\"/c++\">C/C++</NavDropdown.Item>\n                                </NavDropdown>\n                        </Navbar.Collapse>\n                        </Nav.Item>\n\n                        <Nav.Item style={this.navItem}>\n                            <Navbar.Toggle/>\n                            <Navbar.Collapse>\n                                <NavDropdown title=\"Other\" id=\"basic-nav-dropdown\">\n                                    <NavDropdown.Item href=\"/freeTime\">Free Time</NavDropdown.Item>\n                                    <NavDropdown.Item href=\"/classesTaken\" >Classes Taken</NavDropdown.Item>\n                                    <NavDropdown.Item href=\"/previousJobs\">Previous Job</NavDropdown.Item>\n                                </NavDropdown>\n                            </Navbar.Collapse>\n                        </Nav.Item>\n                    </div>\n                </Navbar>\n                <Route exact path=\"/\" component={Home}/>\n                <Route path=\"/home\" component={Home}/>\n                <Route path=\"/java\" component={Java}/>\n                <Route path=\"/python\" component={Python}/>\n                <Route path=\"/javaScript\" component={JavaScript}/>\n                <Route path=\"/previousJobs\" component={PreviousJobs}/>\n                <Route path=\"/freeTime\" component={FreeTime}/>\n                <Route path=\"/classesTaken\" component={ClassesTaken}/>\n\n            </div>\n        </Router>\n\n        );\n    }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}